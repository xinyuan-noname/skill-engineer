trigger: { player: "damageEnd" },
frequent: true,
{{#filter}}
	return event.num > 0;
{{/filter}}
getIndex(event, player, triggername) {
	return event.num;
},
{{#content async=true}}
	const { cards } = await game.cardsGotoOrdering(get.cards(2));
	if (_status.connectMode)
		game.broadcastAll(function () {
			_status.noclearcountdown = true;
		});
	event.given_map = {};
	if (!cards.length) return;
	// event.goto -> do while
	do {
		const {
			result: { bool, links },
		} =
			cards.length == 1
				? { result: { links: cards.slice(0), bool: true } }
				: await player.chooseCardButton("遗计：请选择要分配的牌", true, cards, [1, cards.length]).set("ai", () => {
						if (ui.selected.buttons.length == 0) return 1;
						return 0;
				  });
		if (!bool) return;
		cards.removeArray(links);
		event.togive = links.slice(0);
		const {
			result: { targets },
		} = await player
			.chooseTarget("选择一名角色获得" + get.translation(links), true)
			.set("ai", target => {
				const att = get.attitude(_status.event.player, target);
				if (_status.event.enemy) {
					return -att;
				} else if (att > 0) {
					return att / (1 + target.countCards("h"));
				} else {
					return att / 100;
				}
			})
			.set("enemy", get.value(event.togive[0], player, "raw") < 0);
		if (targets.length) {
			const id = targets[0].playerid,
				map = event.given_map;
			if (!map[id]) map[id] = [];
			map[id].addArray(event.togive);
		}
	} while (cards.length > 0);
	if (_status.connectMode) {
		game.broadcastAll(function () {
			delete _status.noclearcountdown;
			game.stopCountChoose();
		});
	}
	const list = [];
	for (const i in event.given_map) {
		const source = (_status.connectMode ? lib.playerOL : game.playerMap)[i];
		player.line(source, "green");
		if (player !== source && (get.mode() !== "identity" || player.identity !== "nei")) player.addExpose(0.2);
		list.push([source, event.given_map[i]]);
	}
	{{#a "e" "await"}}{{/a}}game.loseAsync({
		gain_list: list,
		giver: player,
		animate: "draw",
	}).setContent("gaincardMultiple");
	{{#a "e" "insert" players="player"}}{{/a}}
{{/content}}